{% set _param = mysql_innodb_param['low'] %}
[mysqld]

# the time-zone set here does not impact the value actually stored in mysql
# it just impact what the time looks WHEN you read the time out (SELECT)
# So, set to '+00:00', '+08:00' or others all works
# But, If you DONOT explicitly set timezone here, mysql may defaults to use
# CST as timezone, which leads errors for JDBC driver client.
# see: https://www.jianshu.com/p/3dbccdef6031
default-time-zone                         = '+08:00'
# hostname                                = {{ inventory_hostname }}

# let master use this address instead of
# default hostname, which might not be
# resolvable by master
report-host                             = {{ inventory_hostname }}

port                                    = {{ mysql_port }}
user                                    = {{ mysql_user }}

basedir                                 = {{ mysql_base }}
datadir                                 = {{ mysql_data_dir }}
tmpdir                                  = {{ mysql_data_dir }}
slave-load-tmpdir                       = {{ mysql_data_dir }}

pid-file                                = {{ mysql_pid_file }}
socket                                  = {{ mysql_socket_file }}

server-id                               = {{ mysql_server_id }}
log-error                               = {{ mysql_error_log }}

{% if mysql_slow_log_enabled|bool %}
long_query_time=1
slow_query_log = 1
slow_query_log_file                     = {{ mysql_slow_log }}
{% endif %}

max-allowed-packet                      = 16M
table-open-cache                        = 1024
join-buffer-size                        = 16M
sort-buffer-size                        = 16M

# for sequential scan
read-buffer-size                        = 16M

# for random read
read-rnd-buffer-size                    = 32M

{% if mysql_version is version('8.0.13', '<') %}
query-cache-type                        = 0
query-cache-size                        = 0
max-tmp-tables                          = 256
{% endif %}
tmp-table-size                          = 128M
max-heap-table-size                     = 128M
thread-cache-size                       = 64
max-connections                         = 2048
max-user-connections                    = 1024
max-connect-errors                      = 99999999
long-query-time                         = 1
slow-query-log                          = 1
slow-query-log-file                     = slow.log
myisam-repair-threads                   = 1
interactive-timeout                     = 3600
wait-timeout                            = 3600

read-only                               = 0
skip-name-resolve
character-set-server                    = utf8

auto-increment-increment                = 100
auto-increment-offset                   = {{ mysql_server_id }}

default-storage-engine                  = InnoDB
transaction-isolation                   = READ-COMMITTED
lower-case-table-names                  = 1
optimizer-switch                        = '{{ mysql_optimizer_switch | join(",") }}'
sql-mode                                = STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION

#-------------  innodb  --------------


innodb-data-file-path                   = ibdata1:12M:autoextend
innodb-buffer-pool-size                 = 4G

# Does not take effect when
# innodb_buffer_pool_size is smaller
# than 1G.
innodb-buffer-pool-instances            = 8
innodb-log-file-size                    = 100M

innodb-flush-log-at-trx-commit          = 0
innodb-log-buffer-size                  = 8M
innodb-log-files-in-group               = 3
innodb-max-dirty-pages-pct              = 90
innodb-lock-wait-timeout                = 20
innodb-file-per-table                   = 1
innodb-flush-method                     = O_DIRECT
innodb-io-capacity                      = 2000
{% if mysql_version is version('8.0.13', '<') %}
innodb-support-xa                       = 1
{% endif %}

#-------------  myisam  --------------


key-buffer-size                         = 1M
myisam-sort-buffer-size                 = 128M


#-------------  binlog  --------------

log-bin                                 = mysql-bin
relay-log                               = relay-bin
binlog-format                           = ROW

max-relay-log-size                      = 1G
relay-log-space-limit                   = 64G
relay-log-purge                         = 1
log-slave-updates                       = 1

# slave-parallel-type                     = LOGICAL_CLOCK

# NOTE(shuoqing): Disable parallel to avoid deallock, the perf should be less concerned.
slave-parallel-workers                  = 0
slave-parallel-type                     = DATABASE

# to reduce io
# commit binlog every 0.01 sec
# in 10^-6 second
# On slave this setting slows
# down replication.
binlog-group-commit-sync-delay          = 0

gtid-mode                               = ON
enforce-gtid-consistency                = 1
binlog-checksum                         = NONE

# Do not start replication at start up
# for trouble shooting.
skip-slave-start                        = 1

# For enabling mutli source
# replication.
master-info-repository                  = TABLE
relay-log-info-repository               = TABLE

# remove binlog older than n days
expire-logs-days                        = {{ mysql_expire_logs_days }}

{% if mysql_gr_enabled|default(false)|bool %}

#-------------  group replication  --------------

transaction-write-set-extraction        = XXHASH64

loose-group_replication_group_name            = "{{ mysql_gr_uuid }}"

# > Configuring group_replication_start_on_boot instructs the plugin to not start
# > operations automatically when the server starts. This is important when setting
# > up Group Replication as it ensures you can configure the server before manually
# > starting the plugin. Once the member is configured you can set
# > group_replication_start_on_boot to on so that Group Replication starts
# > automatically upon server boot.

# It shoudl be off when setting up a group.
# After that it should be `on` to let
# mysql auto starts group replicaton
# when restarted.
loose-group_replication_start_on_boot         = "{{ mysql_group_replication_start_on_boot | default('off') }}"

loose-group_replication_local_address         = "{{ inventory_hostname }}:{{ mysql_gr_port }}"
loose-group_replication_group_seeds           = "{{ ansible_play_hosts | zip_longest([], fillvalue=':'+(mysql_gr_port|string)) | map('join') | join(',') }}"

# on one server only
loose-group_replication_bootstrap_group       = off

# group replication requires this
# if using multi worker to apply binlog
slave-preserve-commit-order                   = 1

# use multi primary mode
loose-group-replication-single-primary-mode   = 0

loose-group_replication_ip_whitelist          = "127.0.0.1/8,{{ groups['mysql'] | join(',') }}"

# to prevent write on non-group-member
super-read-only                               = "{{ mysql_group_replication_super_read_only | default('off') }}"

{% endif %}


[client]

port                                    = {{ mysql_port }}
socket                                  = {{ mysql_socket_file }}
no-auto-rehash
character-set-client                    = utf8


[myisamchk]

key-buffer                              = 64M
sort-buffer-size                        = 32M
read-buffer                             = 16M
write-buffer                            = 16M

